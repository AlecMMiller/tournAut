
#!/bin/bash

padding=30

xRes=1920
yRes=1080

obsX=1200
obsY=600

control_width=500

termXSize=$(($obsX-$control_width))
termYSize=$(($yRes-$obsY-$padding-$padding))

termXPos=$control_width
termYPos=$(($obsY+$padding))

controlXPos=0
controlYPos=$termYPos

managerXPos=$obsX
managerYPos=0

managerYSize=$yRes
managerXSize=$(($xRes-$obsX))

sceneX=50
scene1Y=475
scene2Y=495
scene3Y=515

startX=$(($controlXPos+250))
startY=$(($controlYPos+130))

queueX=$(($controlXPos+85))
queueY=$(($controlYPos+120))

displayX=$(($controlXPos+335))
resultsY=$(($controlYPos+120))
inmatchY=$(($controlYPos+100))

inputX=1050
inputY=640

fieldVal=0
stage=0

# Mouse click functions
scene1 () { xdotool mousemove $sceneX $scene1Y click 1; }
scene2 () { xdotool mousemove $sceneX $scene2Y click 1; }
scene3 () { xdotool mousemove $sceneX $scene3Y click 1; }
start () { xdotool mousemove $startX $startY click 1; }
inmatch () { xdotool mousemove $displayX $inmatchY click 1; }
results () { xdotool mousemove $displayX $resultsY click 1; }
getInput () { xdotool mousemove $(($termXPos+10)) $(($termYPos+100)); xdotool click 1; }
queue () { xdotool mousemove $queueX $queueY click 1; }

function display(){ # Display field video in OBS
	fieldVal="$( echo $fieldVal | tr 01 10)" # Switch which feed to use
	if [ "$fieldVal" == "0" ] 
	then
		scene1
	else
		scene2
	fi
}


echo "please select the OBS window"
obswindow="$(xdotool selectwindow)"

echo "please select the terminal window"
terminalwindow="$(xdotool selectwindow)"

echo "please select the field control window"
controlwindow="$(xdotool selectwindow)"

echo "please select the tournament manager window"
managerwindow="$(xdotool selectwindow)"

function reset(){
	xdotool windowactivate $obswindow
	xdotool windowsize $obswindow $obsX $obsY
	xdotool windowmove $obswindow 0 0

	xdotool windowactivate $terminalwindow	
	xdotool windowsize $terminalwindow $termXSize $termYSize
	xdotool windowmove $terminalwindow $termXPos $termYPos

	xdotool windowmove $controlwindow $controlXPos $controlYPos
	
	xdotool windowsize $managerwindow $managerXSize $managerYSize
	xdotool windowmove $managerwindow $managerXPos $managerYPos
}

reset

while true
do
	getInput # Select terminal window for input
	read -n 1 c # Get next character of input

	if [ "$c" == "+" ] 
	then
		stage=$((stage+1)) # Increment cycle

		case "$stage" in
		"1")
			echo " - Teams Confirm Ready"
			inmatch # Display match info
			display # Display field feed
			;;
		"2")
			echo " - Autonomous"
			start # Enable robots
			;;
		"3")
			echo " - Driver Control"
			start # Enable robots
			sleep 115 # Wait until match is over
			echo "+ - Displaying Results"
			results # Display results
			scene3 # No chroma display mode
			queue
			stage=0 # Go back to start of cycle
			;;
		esac
	elif [ "$c" == "0" ]
	then
		echo " - Switching Displayed Field"
		display # Switch field that's displayed
	elif [ "$c" == "*" ]
	then
		echo " - Resetting Window Positions"
		reset # Reset window positions
	fi

	sleep 1 #Prevent accidental double input

done
